.SECONDEXPANSION:

################################################################
## environment specific configs - REQUIRES UPDATE BEYOND SA TEAM
################################################################

SHELL                 = /bin/bash
ENVIRONMENT_SHORT     = $(shell echo ${ENVIRONMENT} | cut -d- -f1-2)

##################################################################################
# BUILD VARIABLES
##################################################################################

VERSION               = $(shell git describe --tags --exact-match 2>/dev/null || git symbolic-ref -q --short HEAD)
BUILD_DATE            = $(shell date +%FT%T%z)

## Getting local git repository details prior
GIT_COMMIT_ID         = $(shell git rev-parse --short HEAD 2>/dev/null)
GIT_BRANCH_NAME       = $(shell git rev-parse --abbrev-ref HEAD | head -c14)

GIT_VERSION ?= $(shell git describe --tags --dirty --always | sed -e 's/^v//')
GIT_IS_SNAPSHOT = $(if $(findstring -, $(GIT_VERSION)),true,false)
GIT_MAJOR_VERSION = $(word 1, $(subst ., ,$(GIT_VERSION)))
GIT_MINOR_VERSION = $(word 2, $(subst ., ,$(GIT_VERSION)))
GIT_PATCH_VERSION = $(word 3, $(subst ., ,$(word 1,$(subst -, , $(GIT_VERSION)))))
GIT_NEW_VERSION ?= $(GIT_MAJOR_VERSION).$(GIT_MINOR_VERSION).$(shell echo $$(( $(GIT_PATCH_VERSION) + 1))-$(GIT_COMMIT_ID))

# Git Repo URL for Blueprint Description details
GIT_REPO_URL          = $(shell git remote get-url origin | rev | cut -c5- | rev)

# Blueprint Git Tag remove dot notation because dots are not allowed in Blueprint Naming
BP_GIT_TAG            = $(shell git rev-list --tags --max-count=1 | xargs -I {} git describe --tags {} | tr -d '.')

# Marketplace Git Tag leaves dot notation and remove 'v' character to stay in line with existing semantic versioning guidelines
MP_GIT_TAG            = $(shell git rev-list --tags --max-count=1 | xargs -I {} git describe --tags {} | tr -d 'v')

COMMON_CONFIG_DIR      = $(CURDIR)/config/_common
ENV_CONFIG_DIR         = $(CURDIR)/config/${ENVIRONMENT}
ENV_BUILD_CACHE        = ${ENV_CONFIG_DIR}/.cache

##################################################################################
# GLOBAL SECRETS
##################################################################################

YAML_SECRETS_PATH = config/_common/secrets.yaml
PGP_KEY_PATH = .local/_common/sops_gpg_key

ARTIFACTORY_USER      = $(shell sops --decrypt ${YAML_SECRETS_PATH} 2>/dev/null | yq eval .artifactory_user - )
ARTIFACTORY_PASS       = $(shell sops --decrypt ${YAML_SECRETS_PATH} 2>/dev/null | yq eval .artifactory_password - )

AWX_USER      = $(shell sops --decrypt ${YAML_SECRETS_PATH} 2>/dev/null | yq eval .awx_user - )
AWX_PASS       = $(shell sops --decrypt ${YAML_SECRETS_PATH} 2>/dev/null | yq eval .awx_password - )

JENKINS_USER      = $(shell sops --decrypt ${YAML_SECRETS_PATH} 2>/dev/null | yq eval .jenkins_user - )
JENKINS_PASS       = $(shell sops --decrypt ${YAML_SECRETS_PATH} 2>/dev/null | yq eval .jenkins_password - )

ARGOCD_USER      = $(shell sops --decrypt ${YAML_SECRETS_PATH} 2>/dev/null | yq eval .argocd_user - )
ARGOCD_PASS       = $(shell sops --decrypt ${YAML_SECRETS_PATH} 2>/dev/null | yq eval .argocd_password - )

KEYCLOAK_USER      = $(shell sops --decrypt ${YAML_SECRETS_PATH} 2>/dev/null | yq eval .keycloak_user - )
KEYCLOAK_PASS       = $(shell sops --decrypt ${YAML_SECRETS_PATH} 2>/dev/null | yq eval .keycloak_password - )

HARBOR_USER      = $(shell sops --decrypt ${YAML_SECRETS_PATH} 2>/dev/null | yq eval .harbor_user - )
HARBOR_PASS       = $(shell sops --decrypt ${YAML_SECRETS_PATH} 2>/dev/null | yq eval .harbor_password - )

RANCHER_USER      = $(shell sops --decrypt ${YAML_SECRETS_PATH} 2>/dev/null | yq eval .rancher_user - )
RANCHER_PASS       = $(shell sops --decrypt ${YAML_SECRETS_PATH} 2>/dev/null | yq eval .rancher_password - )

MONGODB_USER      = $(shell sops --decrypt ${YAML_SECRETS_PATH} 2>/dev/null | yq eval .mongodb_user - )
MONGODB_PASS       = $(shell sops --decrypt ${YAML_SECRETS_PATH} 2>/dev/null | yq eval .mongodb_password - )

CALM_DSL_USER         = $(shell sops --decrypt ${YAML_SECRETS_PATH} 2>/dev/null | yq eval .calm_dsl_user - )
CALM_DSL_PASS         = $(shell sops --decrypt ${YAML_SECRETS_PATH} 2>/dev/null | yq eval .calm_dsl_pass - )

NUTANIX_KEY_USER       = $(shell sops --decrypt ${YAML_SECRETS_PATH} 2>/dev/null | yq eval .nutanix_key_user - )
NUTANIX_USER           = $(shell sops --decrypt ${YAML_SECRETS_PATH} 2>/dev/null | yq eval .nutanix_user - )
NUTANIX_PASS           = $(shell sops --decrypt ${YAML_SECRETS_PATH} 2>/dev/null | yq eval .nutanix_password - )

PRISM_CENTRAL_USER     = $(shell sops --decrypt ${YAML_SECRETS_PATH} 2>/dev/null | yq eval .prism_central_user - )
PRISM_CENTRAL_PASS     = $(shell sops --decrypt ${YAML_SECRETS_PATH} 2>/dev/null | yq eval .prism_central_password - )
PRISM_ELEMENT_USER     = $(shell sops --decrypt ${YAML_SECRETS_PATH} 2>/dev/null | yq eval .prism_element_user - )
PRISM_ELEMENT_PASS     = $(shell sops --decrypt ${YAML_SECRETS_PATH} 2>/dev/null | yq eval .prism_element_password - )

WINDOWS_DOMAIN_ADMIN   = $(shell sops --decrypt ${YAML_SECRETS_PATH} 2>/dev/null | yq eval .windows_domain_user - )
WINDOWS_DOMAIN_PASS   = $(shell sops --decrypt ${YAML_SECRETS_PATH} 2>/dev/null | yq eval .windows_domain_password - )

#NUTANIX_KEY           = $(shell sops --decrypt ${YAML_SECRETS_PATH} 2>/dev/null | yq eval .nutanix_key - )
#NUTANIX_PUBLIC_KEY    = $(shell sops --decrypt ${YAML_SECRETS_PATH} 2>/dev/null | yq eval .nutanix_public_key - )

AZURE_TENANT_ID        = $(shell sops --decrypt ${YAML_SECRETS_PATH} 2>/dev/null | yq eval .azure_tenant_id - )
AZURE_SUBSCRIPTION_ID  = $(shell sops --decrypt ${YAML_SECRETS_PATH} 2>/dev/null | yq eval .azure_subscription_id - )
AZURE_CLIENT_ID        = $(shell sops --decrypt ${YAML_SECRETS_PATH} 2>/dev/null | yq eval .azure_client_id - )
AZURE_CLIENT_SECRET    = $(shell sops --decrypt ${YAML_SECRETS_PATH} 2>/dev/null | yq eval .azure_client_secret - )

AWS_ACCESS_KEY_ID     = $(shell sops --decrypt ${YAML_SECRETS_PATH} 2>/dev/null | yq eval .aws_access_key_id - )
AWS_ACCESS_KEY_SECRET = $(shell sops --decrypt ${YAML_SECRETS_PATH} 2>/dev/null | yq eval .aws_access_key_secret - )

DOCKER_HUB_USER     = $(shell sops --decrypt ${YAML_SECRETS_PATH} 2>/dev/null | yq eval .docker_hub_user - )
DOCKER_HUB_PASS     = $(shell sops --decrypt ${YAML_SECRETS_PATH} 2>/dev/null | yq eval .docker_hub_password - )

GITHUB_REPO_URL     = $(shell sops --decrypt ${YAML_SECRETS_PATH} 2>/dev/null | yq eval .github_repo_url - )
GITHUB_USER     = $(shell sops --decrypt ${YAML_SECRETS_PATH} 2>/dev/null | yq eval .github_user - )
GITHUB_PASS     = $(shell sops --decrypt ${YAML_SECRETS_PATH} 2>/dev/null | yq eval .github_password - )
GITHUB_EMAIL     = $(shell sops --decrypt ${YAML_SECRETS_PATH} 2>/dev/null | yq eval .github_email - )

OBJECTS_ACCESS_KEY     = $(shell sops --decrypt ${YAML_SECRETS_PATH} 2>/dev/null | yq eval .objects_access_key - )
OBJECTS_SECRET_KEY     = $(shell sops --decrypt ${YAML_SECRETS_PATH} 2>/dev/null | yq eval .objects_secret_key - )

# Default Configs defined below:

##################################################################################
# PRISM CENTRAL DEFAULTS
##################################################################################

# requires .calm/.local/prism_central_password to be configured
PC_USER = ${PRISM_CENTRAL_USER}
PC_PASS = ${PRISM_CENTRAL_PASS}
PC_CRED = ${PRISM_CENTRAL_USER}:${PRISM_CENTRAL_PASS}
PC_PORT = 9440
PE_PORT = 9440

##################################################################################
# CALM INFRA DEFAULTS
##################################################################################

CALM_PROJECT  =  BootcampInfra
CALM_ENVIRONMENT = ${ENVIRONMENT_SHORT}

CALM_DSL_PC_IP = ${PC_IP_ADDRESS}
CALM_DSL_PC_PORT = ${PC_PORT}
CALM_DSL_PC_USERNAME = ${PC_USER}
CALM_DSL_PC_PASSWORD = ${PC_PASS}
CALM_DSL_DEFAULT_PROJECT = ${CALM_PROJECT}

# exporting different flavors of the exact same thing due to scripts having different requirements.
PC_IP = ${PC_IP_ADDRESS}
PC_PASSWORD = ${PC_PASS}
PC_PROJECT = ${CALM_PROJECT}

CALM_DSL_CONFIG_FILE_LOCATION = /root/.calm/${ENVIRONMENT}/config.ini
CALM_DSL_DB_LOCATION = /root/.calm/${ENVIRONMENT}/dsl.db
CALM_DSL_LOCAL_DIR_LOCATION = /root/.calm/${ENVIRONMENT}/
CALM_DSL_LOG_LEVEL = INFO

# additional category items to add for Calm Marketplace. These are added to AppFamily in Prism Central

CALM_CATEGORIES_LIST = DataProtection,ServiceMesh,ImageRegistry,Observability,CICD_GitOps,KubernetesDistro,Security,IdentityManagement,Operators,ConfigManagement,InfraManagement,K8s_ControlPlane,K8s_Etcd,K8s_Workers

# setting dsl bp to execute
DSL_BP            ?= karbon_cluster_deployment

##################################################################################
# AZURE DEFAULTS
##################################################################################

AZURE_AGENT_POOL=Default
AZURE_AGENT_VERSION=2.184.2

## explicitly required for Azure Agent VM
AZURE_PIPELINE_URL=https://dev.azure.com/sa-cloud-infra

##################################################################################
# HPOC INFRA DEFAULTS
##################################################################################

## domain configs
DOMAIN_NAME=ntnxlab.local

## storage container info
PE_STORAGE_CONTAINER=Default
## ahv network ipam config
IPAM_VLAN=Primary

## set hpoc specific default vars based on KALM_INSTANCE
## to find available IPS - `nmap -sn -n ${SUBNET_PREFIX}.64/26 -v -oG - | grep "Down" | awk '{print $2,$4,$5}'`
## IF KALM_INSTANCE is equal to 1, then network will most likely fall in 10.38.x.0/26 network - 10.38.x.12-10.38.x.30 seems to be safe range.
## IF KALM_INSTANCE is equal to 2, .64/26 scenario - 10.38.x.80 - 10.38.x.105 seems to be safe range.
## IF KALM_INSTANCE is equal to 3, .128/25 scenario - 10.38.x.210 - 10.38.x.230 seems to be safe range
## IF KALM_INSTANCE is equal to 4, .192/26 scenario - 10.38.x.210 - 10.38.x.230 seems to be safe range

KALM_ID=$(shell echo ${ENVIRONMENT} | cut -d- -f3)
KALM_INSTANCE=$(shell echo ${ENVIRONMENT} | cut -d- -f4)
SUBNET_PREFIX=10.38.${KALM_ID}

# ## Need to add zero if hpoc is 01-09
ifeq ($(shell expr $(KALM_ID) \<= 10), 1)
	PE_CLUSTER_NAME = PHX-SPOC00${KALM_ID}-${KALM_INSTANCE}
else 
	PE_CLUSTER_NAME = PHX-SPOC0${KALM_ID}-${KALM_INSTANCE}
endif

## i.e., PHX-SPOC-15-1
ifeq (${KALM_INSTANCE},1)
  ## network configs
  NETWORK=${SUBNET_PREFIX}.0
  GATEWAY=${SUBNET_PREFIX}.1
  CIDR=26
  ## IPAM Range
  DHCP_IP_POOL_RANGE=${SUBNET_PREFIX}.28-${SUBNET_PREFIX}.61
  ## prism central / element configs
  PE_CLUSTER_VIP=${SUBNET_PREFIX}.7
  PE_DATASERVICES_VIP=${SUBNET_PREFIX}.8
  PC_IP_ADDRESS=${SUBNET_PREFIX}.9
  ## ldap / dns configs
  DNS=${SUBNET_PREFIX}.11
  ## explicitly for objects
  OBJECTS_STORE_PUBLIC_IP=${SUBNET_PREFIX}.14
  ## era vm ip
  ERA_VM_IP=${SUBNET_PREFIX}.22
  ## policy engine vm ip
  CALM_POLICY_ENGINE_VM_IP=${SUBNET_PREFIX}.23
  ifeq (${ENVIRONMENT_SHORT},kalm-main)
    KARBON_EXT_IPV4=${SUBNET_PREFIX}.15
    KARBON_INGRESS_VIP=${SUBNET_PREFIX}.16
    KARBON_LB_ADDRESSPOOL=${SUBNET_PREFIX}.16-${SUBNET_PREFIX}.18
  endif
  ifeq (${ENVIRONMENT_SHORT},kalm-develop)
    KARBON_EXT_IPV4=${SUBNET_PREFIX}.19
    KARBON_INGRESS_VIP=${SUBNET_PREFIX}.20
    KARBON_LB_ADDRESSPOOL=${SUBNET_PREFIX}.20-${SUBNET_PREFIX}.21
  endif
endif

## i.e., PHX-SPOC-15-2
ifeq (${KALM_INSTANCE},2)
  ## network configs
  NETWORK=${SUBNET_PREFIX}.64
  GATEWAY=${SUBNET_PREFIX}.65
  CIDR=26
  ## IPAM Range
  DHCP_IP_POOL_RANGE=${SUBNET_PREFIX}.92-${SUBNET_PREFIX}.125
  ## prism central / element configs
  PE_CLUSTER_VIP=${SUBNET_PREFIX}.71
  PE_DATASERVICES_VIP=${SUBNET_PREFIX}.72
  PC_IP_ADDRESS=${SUBNET_PREFIX}.73
  ## ldap / dns configs
  DNS=${SUBNET_PREFIX}.75
  ## explicitly for objects
  OBJECTS_STORE_PUBLIC_IP=${SUBNET_PREFIX}.78
  ## era vm ip
  ERA_VM_IP=${SUBNET_PREFIX}.86
  ## policy engine vm ip
  CALM_POLICY_ENGINE_VM_IP=${SUBNET_PREFIX}.87
  ifeq (${ENVIRONMENT_SHORT},kalm-main)
    KARBON_EXT_IPV4=${SUBNET_PREFIX}.79
    KARBON_INGRESS_VIP=${SUBNET_PREFIX}.80
    KARBON_LB_ADDRESSPOOL=${SUBNET_PREFIX}.80-${SUBNET_PREFIX}.83
  endif
  ifeq (${ENVIRONMENT_SHORT},kalm-develop)
    KARBON_EXT_IPV4=${SUBNET_PREFIX}.84
    KARBON_INGRESS_VIP=${SUBNET_PREFIX}.85
    KARBON_LB_ADDRESSPOOL=${SUBNET_PREFIX}.85-${SUBNET_PREFIX}.86
  endif
endif

# ## i.e., PHX-SPOC-15-3
ifeq (${KALM_INSTANCE},3)
  ## network configs
  NETWORK=${SUBNET_PREFIX}.128
  GATEWAY=${SUBNET_PREFIX}.129
  CIDR=26
  ## IPAM Range
  DHCP_IP_POOL_RANGE=${SUBNET_PREFIX}.156-${SUBNET_PREFIX}.189
  ## prism central / element configs
  PE_CLUSTER_VIP=${SUBNET_PREFIX}.135
  PE_DATASERVICES_VIP=${SUBNET_PREFIX}.136
  PC_IP_ADDRESS=${SUBNET_PREFIX}.137
  ## ldap / dns configs
  DNS=${SUBNET_PREFIX}.139
  ## explicitly for objects
  OBJECTS_STORE_PUBLIC_IP=${SUBNET_PREFIX}.142
  ## era vm ip
  ERA_VM_IP=${SUBNET_PREFIX}.150
  ## policy engine vm ip
  CALM_POLICY_ENGINE_VM_IP=${SUBNET_PREFIX}.151
  ifeq (${ENVIRONMENT_SHORT},kalm-main)
    KARBON_EXT_IPV4=${SUBNET_PREFIX}.143
    KARBON_INGRESS_VIP=${SUBNET_PREFIX}.144
    KARBON_LB_ADDRESSPOOL=${SUBNET_PREFIX}.144-${SUBNET_PREFIX}.146
  endif
  ifeq (${ENVIRONMENT_SHORT},kalm-develop)
    KARBON_EXT_IPV4=${SUBNET_PREFIX}.147
    KARBON_INGRESS_VIP=${SUBNET_PREFIX}.148
    KARBON_LB_ADDRESSPOOL=${SUBNET_PREFIX}.148-${SUBNET_PREFIX}.150
  endif
endif

# ## i.e., PHX-SPOC-15-4
ifeq (${KALM_INSTANCE},4)
  ## network configs
  NETWORK=${SUBNET_PREFIX}.192
  GATEWAY=${SUBNET_PREFIX}.193
  CIDR=26
  ## IPAM Range
  DHCP_IP_POOL_RANGE=${SUBNET_PREFIX}.220-${SUBNET_PREFIX}.253
  ## prism central / element configs
  PE_CLUSTER_VIP=${SUBNET_PREFIX}.199
  PE_DATASERVICES_VIP=${SUBNET_PREFIX}.200
  PC_IP_ADDRESS=${SUBNET_PREFIX}.201
  ## ldap / dns configs
  DNS=${SUBNET_PREFIX}.203
  ## explicitly for objects
  OBJECTS_STORE_PUBLIC_IP=${SUBNET_PREFIX}.206
  ## era vm ip
  ERA_VM_IP=${SUBNET_PREFIX}.214
  ## policy engine vm ip
  CALM_POLICY_ENGINE_VM_IP=${SUBNET_PREFIX}.215
  ifeq (${ENVIRONMENT_SHORT},kalm-main)
    KARBON_EXT_IPV4=${SUBNET_PREFIX}.207
    KARBON_INGRESS_VIP=${SUBNET_PREFIX}.208
    KARBON_LB_ADDRESSPOOL=${SUBNET_PREFIX}.208-${SUBNET_PREFIX}.210
  endif
  ifeq (${ENVIRONMENT_SHORT},kalm-develop)
    KARBON_EXT_IPV4=${SUBNET_PREFIX}.216
    KARBON_INGRESS_VIP=${SUBNET_PREFIX}.217
    KARBON_LB_ADDRESSPOOL=${SUBNET_PREFIX}.217-${SUBNET_PREFIX}.219
  endif
endif

# karbon blueprint default configs

## set karbon specific configs. kalm-main is production-like
ifeq (${ENVIRONMENT_SHORT},kalm-main)
  KARBON_CLUSTER_TYPE=Production - Multi-Master Active/Passive
  KARBON_WORKER_COUNT=7
else
  KARBON_CLUSTER_TYPE=Development
  KARBON_WORKER_COUNT=2
endif

KARBON_CLUSTER=${ENVIRONMENT}
KARBON_VLAN=${IPAM_VLAN}
KARBON_CONTAINER_OS_VER=ntnx-1.2
KARBON_K8S_VER=1.20.9-1
KARBON_CNI_NAME=Calico
KARBON_STORAGE_CONTAINER=${PE_STORAGE_CONTAINER}

KARBON_API_DNS_SHORT=api.${KARBON_CLUSTER}
KARBON_API_DNS_FQDN=${KARBON_API_DNS_SHORT}.${DOMAIN_NAME}

KUBECTL_CONTEXT=${KARBON_CLUSTER}-context
KARBON_API_ENDPOINT=https://${PC_IP_ADDRESS}:9440/karbon

WILDCARD_INGRESS_IP=$(shell echo ${KARBON_LB_ADDRESSPOOL} | cut -d- -f1)
WILDCARD_INGRESS_DNS_SHORT=${KARBON_CLUSTER}
WILDCARD_INGRESS_DNS_SHORT_SIMPLE=${ENVIRONMENT_SHORT}
WILDCARD_INGRESS_DNS_FQDN=${WILDCARD_INGRESS_DNS_SHORT}.${DOMAIN_NAME}

BASTION_WS_ENDPOINT_SHORT=bastionws
BASTION_WS_ENDPOINT=${BASTION_WS_ENDPOINT_SHORT}.${DOMAIN_NAME}

# endpoint configs

## REUSING WINDOWS DNS SERVER as scripting host. Override in DNS as needed
WINDOWS_SCRIPTING_HOST_IP=${DNS}
WINDOWS_SCRIPTING_HOST_USER=${WINDOWS_DOMAIN_ADMIN}
WINDOWS_SCRIPTING_HOST_PASS=${WINDOWS_DOMAIN_PASS}

##################################################################################
# NUTANIX FILES DEFAULTS
##################################################################################

## file server specifics
NUTANIX_FILES_NFS_SHORT=bootcampfs
NUTANIX_FILES_NFS_FQDN=${NUTANIX_FILES_NFS_SHORT}.${DOMAIN_NAME}
## file server NFS export specifics
NUTANIX_FILES_NFS_EXPORT=/${ENVIRONMENT_SHORT}-nfs

##################################################################################
# OBJECTS DEFAULTS
##################################################################################

# objects configs
OBJECTS_STORE_DNS_SHORT=ntnx-objects
OBJECTS_STORE_DNS_FQDN=${OBJECTS_STORE_DNS_SHORT}.${DOMAIN_NAME}
# objects bucket configs
OBJECTS_BUCKET_NAME=${ENVIRONMENT_SHORT}-bucket
OBJECTS_BUCKET_DNS_SHORT=${OBJECTS_BUCKET_NAME}.${OBJECTS_STORE_DNS_SHORT}
OBJECTS_BUCKET_DNS_FQDN=${OBJECTS_BUCKET_DNS_SHORT}.${DOMAIN_NAME}

# additional buckets to add for various integration use cases.

OBJECTS_BUCKETS_LIST = kasten,terraform,rancher,redhat,mongodb

##################################################################################
# RANCHER DEFAULTS
##################################################################################

# Rke configs
RKE_CLUSTER_NAME=rke-${ENVIRONMENT}
RKE2_CLUSTER_NAME=rke2-${ENVIRONMENT}

##################################################################################
# HELM CHART DEFAULTS
##################################################################################

## explicitly for Kasten Karbon Cluster - Multi-Cluster - OPTIONAL
PRIMARY_KASTEN_K8S_CLUSTER=kalm-main-${KALM_ID}-${KALM_INSTANCE}

## MONGODB

OPSMANAGER_VERSION=5.0.10
OPSMANAGER_APPDB_VERSION=4.4.4-ent

OPSMANAGER_REPLICASET_COUNT=3
OPSMANAGER_APPDB_REPLICASET_COUNT=3

MONGODB_APPDB_VERSION=4.4.4-ent
MONGODB_APPDB_CONTAINER_IMAGE=mongodb-enterprise-database
MONGODB_APPDB_CPU_LIMITS=2
MONGODB_APPDB_MEM_LIMITS=2G

MONGODB_APPDB_DATA_SIZE=10Gi
MONGODB_APPDB_LOGS_SIZE=500M

MONGODB_APPDB_JOURNAL_SIZE=1Gi

MONGODB_APPDB_REPLICASET_COUNT=3

MONGODB_APPDB_SHARD_COUNT=2
MONGODB_APPDB_MONGODS_PER_SHARD_COUNT=3
MONGODB_APPDB_MONGOS_COUNT=2
MONGODB_APPDB_CONFIGSERVER_COUNT=3

MONGODB_APPDB_STORAGE_CLASS=default-storageclass

##################################################################################
# PACKER DEFAULTS
##################################################################################

PKR_VAR_nutanix_username    = "admin"
PKR_VAR_nutanix_password    = ""
PKR_VAR_nutanix_insecure    = false
PKR_VAR_nutanix_endpoint    = "10.38.12.137"
PKR_VAR_nutanix_port = 9440
PKR_VAR_nutanix_cluster = "PHX-SPOC012-3"
PKR_VAR_nutanix_subnet = "Primary"
PKR_VAR_centos_iso_image_name = "http://download.nutanix.com/calm/CentOS-7-x86_64-GenericCloud.qcow2"
PKR_VAR_centos_disk_image_name =  "CentOS-7-x86_64-GenericCloud.qcow2"

PKR_VAR_windows_2016_iso_image_name = "en_windows_server_2016_x64_dvd_9327751.iso"
PKR_VAR_virtio_iso_image_name = "Nutanix-VirtIO-1.1.7.iso"

TF_VAR_nutanix_subnet="Primary"
TF_VAR_nutanix_cluster="PHX-SPOC012-3"
TF_VAR_PC_USER=admin
TF_VAR_PC_PASS=""
TF_VAR_PC_ENDPOINT="10.38.12.137"

TF_VAR_vm_ip="10.38.12.155"

PKR_VAR_PC_USER=admin
PKR_VAR_PC_PASS=""
PKR_VAR_PC_ENDPOINT="10.38.12.137"
